"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/getNftsForOwner";
exports.ids = ["pages/api/getNftsForOwner"];
exports.modules = {

/***/ "alchemy-sdk":
/*!******************************!*\
  !*** external "alchemy-sdk" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("alchemy-sdk");

/***/ }),

/***/ "(api)/./pages/api/getNftsForOwner.js":
/*!**************************************!*\
  !*** ./pages/api/getNftsForOwner.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alchemy-sdk */ \"alchemy-sdk\");\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__);\n\nasync function handler(req, res) {\n    const { address , pageSize , chain , excludeFilter , pageKey  } = JSON.parse(req.body);\n    console.log(chain);\n    if (req.method !== \"POST\") {\n        res.status(405).send({\n            message: \"Only POST requests allowed\"\n        });\n        return;\n    }\n    const settings = {\n        apiKey: process.env.ALCHEMY_API_KEY,\n        network: alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Network[chain]\n    };\n    const alchemy = new alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Alchemy(settings);\n    try {\n        const nfts = await alchemy.nft.getNftsForOwner(address, {\n            pageSize: pageSize ? pageSize : 100,\n            excludeFilters: excludeFilter && [\n                alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.NftFilters.SPAM\n            ],\n            pageKey: pageKey ? pageKey : \"\"\n        });\n        const formattedNfts = nfts.ownedNfts.map((nft)=>{\n            const { contract , title , tokenType , tokenId , description , media  } = nft;\n            return {\n                contract: contract.address,\n                symbol: contract.symbol,\n                collectionName: contract.openSea?.collectionName,\n                media: media[0]?.gateway ? media[0]?.gateway : \"https://via.placeholder.com/500\",\n                verified: contract.openSea?.safelistRequestStatus,\n                tokenType,\n                tokenId,\n                title,\n                description\n            };\n        });\n        const filteredNfts = formattedNfts.filter((nft)=>nft.title.length && nft.description.length && nft.media);\n        res.status(200).json({\n            nfts: filteredNfts,\n            pageKey: nfts.pageKey\n        });\n    } catch (e) {\n        console.warn(e);\n        res.status(500).send({\n            message: \"something went wrong, check the log in your terminal\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ2V0TmZ0c0Zvck93bmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyRDtBQUU1QyxlQUFlRyxRQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUMvQyxNQUFNLEVBQUVDLFFBQU8sRUFBRUMsU0FBUSxFQUFFQyxNQUFLLEVBQUVDLGNBQWEsRUFBRUMsUUFBTyxFQUFFLEdBQUdDLEtBQUtDLEtBQUssQ0FDdEVSLElBQUlTLElBQUk7SUFFVEMsUUFBUUMsR0FBRyxDQUFDUDtJQUNaLElBQUlKLElBQUlZLE1BQU0sS0FBSyxRQUFRO1FBQzFCWCxJQUFJWSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBNkI7UUFDN0Q7SUFDRCxDQUFDO0lBRUQsTUFBTUMsV0FBVztRQUNoQkMsUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxlQUFlO1FBQ25DQyxTQUFTekIsZ0RBQU8sQ0FBQ1EsTUFBTTtJQUN4QjtJQUVBLE1BQU1rQixVQUFVLElBQUl6QixnREFBT0EsQ0FBQ21CO0lBRTVCLElBQUk7UUFDSCxNQUFNTyxPQUFPLE1BQU1ELFFBQVFFLEdBQUcsQ0FBQ0MsZUFBZSxDQUFDdkIsU0FBUztZQUN2REMsVUFBVUEsV0FBV0EsV0FBVyxHQUFHO1lBQ25DdUIsZ0JBQWdCckIsaUJBQWlCO2dCQUFDUCx3REFBZTthQUFDO1lBQ2xEUSxTQUFTQSxVQUFVQSxVQUFVLEVBQUU7UUFDaEM7UUFFQSxNQUFNc0IsZ0JBQWdCTCxLQUFLTSxTQUFTLENBQUNDLEdBQUcsQ0FBQyxDQUFDTixNQUFRO1lBQ2pELE1BQU0sRUFBRU8sU0FBUSxFQUFFQyxNQUFLLEVBQUVDLFVBQVMsRUFBRUMsUUFBTyxFQUFFQyxZQUFXLEVBQUVDLE1BQUssRUFBRSxHQUNoRVo7WUFFRCxPQUFPO2dCQUNOTyxVQUFVQSxTQUFTN0IsT0FBTztnQkFDMUJtQyxRQUFRTixTQUFTTSxNQUFNO2dCQUN2QkMsZ0JBQWdCUCxTQUFTUSxPQUFPLEVBQUVEO2dCQUNsQ0YsT0FBT0EsS0FBSyxDQUFDLEVBQUUsRUFBRUksVUFDZEosS0FBSyxDQUFDLEVBQUUsRUFBRUksVUFDVixpQ0FBaUM7Z0JBQ3BDQyxVQUFVVixTQUFTUSxPQUFPLEVBQUVHO2dCQUM1QlQ7Z0JBQ0FDO2dCQUNBRjtnQkFDQUc7WUFDRDtRQUNEO1FBQ0YsTUFBTVEsZUFBZWYsY0FBY2dCLE1BQU0sQ0FDbkMsQ0FBQ3BCLE1BQVFBLElBQUlRLEtBQUssQ0FBQ2EsTUFBTSxJQUFJckIsSUFBSVcsV0FBVyxDQUFDVSxNQUFNLElBQUlyQixJQUFJWSxLQUFLO1FBRXBFbkMsSUFBSVksTUFBTSxDQUFDLEtBQUtpQyxJQUFJLENBQUM7WUFBRXZCLE1BQU1vQjtZQUFjckMsU0FBU2lCLEtBQUtqQixPQUFPO1FBQUM7SUFDbEUsRUFBRSxPQUFPeUMsR0FBRztRQUNYckMsUUFBUXNDLElBQUksQ0FBQ0Q7UUFDYjlDLElBQUlZLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDcEJDLFNBQVM7UUFDVjtJQUNEO0FBQ0QsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25mdC1leHBsb3Jlci1kYXBwLy4vcGFnZXMvYXBpL2dldE5mdHNGb3JPd25lci5qcz9mNDY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5ldHdvcmssIEFsY2hlbXksIE5mdEZpbHRlcnMgfSBmcm9tIFwiYWxjaGVteS1zZGtcIjtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuXHRjb25zdCB7IGFkZHJlc3MsIHBhZ2VTaXplLCBjaGFpbiwgZXhjbHVkZUZpbHRlciwgcGFnZUtleSB9ID0gSlNPTi5wYXJzZShcblx0XHRyZXEuYm9keVxuXHQpO1xuXHRjb25zb2xlLmxvZyhjaGFpbik7XG5cdGlmIChyZXEubWV0aG9kICE9PSBcIlBPU1RcIikge1xuXHRcdHJlcy5zdGF0dXMoNDA1KS5zZW5kKHsgbWVzc2FnZTogXCJPbmx5IFBPU1QgcmVxdWVzdHMgYWxsb3dlZFwiIH0pO1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IHNldHRpbmdzID0ge1xuXHRcdGFwaUtleTogcHJvY2Vzcy5lbnYuQUxDSEVNWV9BUElfS0VZLFxuXHRcdG5ldHdvcms6IE5ldHdvcmtbY2hhaW5dLFxuXHR9O1xuXG5cdGNvbnN0IGFsY2hlbXkgPSBuZXcgQWxjaGVteShzZXR0aW5ncyk7XG5cblx0dHJ5IHtcblx0XHRjb25zdCBuZnRzID0gYXdhaXQgYWxjaGVteS5uZnQuZ2V0TmZ0c0Zvck93bmVyKGFkZHJlc3MsIHtcblx0XHRcdHBhZ2VTaXplOiBwYWdlU2l6ZSA/IHBhZ2VTaXplIDogMTAwLFxuXHRcdFx0ZXhjbHVkZUZpbHRlcnM6IGV4Y2x1ZGVGaWx0ZXIgJiYgW05mdEZpbHRlcnMuU1BBTV0sXG5cdFx0XHRwYWdlS2V5OiBwYWdlS2V5ID8gcGFnZUtleSA6IFwiXCIsXG5cdFx0fSk7XG5cblx0XHRjb25zdCBmb3JtYXR0ZWROZnRzID0gbmZ0cy5vd25lZE5mdHMubWFwKChuZnQpID0+IHtcblx0XHRcdGNvbnN0IHsgY29udHJhY3QsIHRpdGxlLCB0b2tlblR5cGUsIHRva2VuSWQsIGRlc2NyaXB0aW9uLCBtZWRpYSB9ID1cblx0XHRcdFx0bmZ0O1xuXG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRjb250cmFjdDogY29udHJhY3QuYWRkcmVzcyxcblx0XHRcdFx0c3ltYm9sOiBjb250cmFjdC5zeW1ib2wsXG5cdFx0XHRcdGNvbGxlY3Rpb25OYW1lOiBjb250cmFjdC5vcGVuU2VhPy5jb2xsZWN0aW9uTmFtZSxcblx0XHRcdFx0bWVkaWE6IG1lZGlhWzBdPy5nYXRld2F5XG5cdFx0XHRcdFx0PyBtZWRpYVswXT8uZ2F0ZXdheVxuXHRcdFx0XHRcdDogXCJodHRwczovL3ZpYS5wbGFjZWhvbGRlci5jb20vNTAwXCIsXG5cdFx0XHRcdHZlcmlmaWVkOiBjb250cmFjdC5vcGVuU2VhPy5zYWZlbGlzdFJlcXVlc3RTdGF0dXMsXG5cdFx0XHRcdHRva2VuVHlwZSxcblx0XHRcdFx0dG9rZW5JZCxcblx0XHRcdFx0dGl0bGUsXG5cdFx0XHRcdGRlc2NyaXB0aW9uLFxuXHRcdFx0fTtcblx0XHR9KTtcbmNvbnN0IGZpbHRlcmVkTmZ0cyA9IGZvcm1hdHRlZE5mdHMuZmlsdGVyKFxuICAgICAgKG5mdCkgPT4gbmZ0LnRpdGxlLmxlbmd0aCAmJiBuZnQuZGVzY3JpcHRpb24ubGVuZ3RoICYmIG5mdC5tZWRpYVxuICAgICk7XG5cdFx0cmVzLnN0YXR1cygyMDApLmpzb24oeyBuZnRzOiBmaWx0ZXJlZE5mdHMsIHBhZ2VLZXk6IG5mdHMucGFnZUtleSB9KTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGNvbnNvbGUud2FybihlKTtcblx0XHRyZXMuc3RhdHVzKDUwMCkuc2VuZCh7XG5cdFx0XHRtZXNzYWdlOiBcInNvbWV0aGluZyB3ZW50IHdyb25nLCBjaGVjayB0aGUgbG9nIGluIHlvdXIgdGVybWluYWxcIixcblx0XHR9KTtcblx0fVxufVxuIl0sIm5hbWVzIjpbIk5ldHdvcmsiLCJBbGNoZW15IiwiTmZ0RmlsdGVycyIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJhZGRyZXNzIiwicGFnZVNpemUiLCJjaGFpbiIsImV4Y2x1ZGVGaWx0ZXIiLCJwYWdlS2V5IiwiSlNPTiIsInBhcnNlIiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJtZXRob2QiLCJzdGF0dXMiLCJzZW5kIiwibWVzc2FnZSIsInNldHRpbmdzIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIkFMQ0hFTVlfQVBJX0tFWSIsIm5ldHdvcmsiLCJhbGNoZW15IiwibmZ0cyIsIm5mdCIsImdldE5mdHNGb3JPd25lciIsImV4Y2x1ZGVGaWx0ZXJzIiwiU1BBTSIsImZvcm1hdHRlZE5mdHMiLCJvd25lZE5mdHMiLCJtYXAiLCJjb250cmFjdCIsInRpdGxlIiwidG9rZW5UeXBlIiwidG9rZW5JZCIsImRlc2NyaXB0aW9uIiwibWVkaWEiLCJzeW1ib2wiLCJjb2xsZWN0aW9uTmFtZSIsIm9wZW5TZWEiLCJnYXRld2F5IiwidmVyaWZpZWQiLCJzYWZlbGlzdFJlcXVlc3RTdGF0dXMiLCJmaWx0ZXJlZE5mdHMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJqc29uIiwiZSIsIndhcm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/getNftsForOwner.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/getNftsForOwner.js"));
module.exports = __webpack_exports__;

})();